
rules_version = '2';

service cloud.firestore {

  // ==================================
  // == Helper Functions ==
  // ==================================

  function isAuthenticated() {
    return request.auth != null;
  }

  // ==================================
  // == Collection Rules ==
  // ==================================

  match /databases/{database}/documents {

    // == Users Collection ==
    // Keep this relatively open for now to ensure isDoctor()/isPatient() helpers don't fail due to read restrictions here
    match /users/{userId} {
      allow read: if isAuthenticated(); // Allows any authenticated user to read user profiles (for helper functions)
      allow create: if isAuthenticated() &&
                      request.auth.uid == userId &&
                      request.resource.data.uid == request.auth.uid &&
                      request.resource.data.email == request.auth.token.email &&
                      request.resource.data.firstName is string && request.resource.data.firstName.size() > 0 &&
                      request.resource.data.lastName is string && request.resource.data.lastName.size() > 0 &&
                      request.resource.data.userType is string && (request.resource.data.userType == 'doctor' || request.resource.data.userType == 'patient');
                      // No request.time check for createdAt on create with serverTimestamp()
      allow update: if isAuthenticated() &&
                      request.auth.uid == userId &&
                      // Prevent critical fields from being changed
                      request.resource.data.uid == resource.data.uid &&
                      request.resource.data.email == resource.data.email &&
                      request.resource.data.userType == resource.data.userType &&
                      request.resource.data.createdAt == resource.data.createdAt;
      allow delete: if false;
    }

    // == PatientRecords Collection ==
    match /patientRecords/{recordId} {
      // EXTREMELY PERMISSIVE FOR DEBUGGING - DO NOT USE IN PRODUCTION
      allow create: if true;

      // Keep other rules simplified for now, or comment them out if focusing only on create
      allow read: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated();
    }

    // Temporarily comment out other collections to reduce complexity during this test
    /*
    // == AiInstructions Collection ==
    match /aiInstructions/{doctorId} {
      // function isDoctor() should be defined above or use direct check:
      // let userData = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      // allow read, write: if isAuthenticated() && userData != null && userData.userType == 'doctor' && request.auth.uid == doctorId;
    }

    // == Appointments Collection ==
    match /appointments/{appointmentId} {
      // Rules need to be defined based on patientAuthUid and doctorId fields in the appointment document
      // Example:
      // allow create: if isAuthenticated(); // Too open, refine
      // allow read: if isAuthenticated() && (resource.data.patientAuthUid == request.auth.uid || resource.data.doctorId == request.auth.uid);
    }

    // == Diagnoses Collection ==
    match /diagnoses/{diagnosisId} {
      // Needs isDoctorManagingPatient or similar logic
      // function isDoctorManagingPatient(patientRecordId) { ... }
      // allow create: if isAuthenticated() && isDoctorManagingPatient(request.resource.data.patientRecordId) && request.resource.data.diagnosedBy == request.auth.uid;
    }

    // == PatientDocuments Collection ==
    match /patientDocuments/{documentId} {
       // Needs isDoctorManagingPatient or similar logic
      // allow create: if isAuthenticated() && isDoctorManagingPatient(request.resource.data.patientRecordId) && request.resource.data.uploadedBy == request.auth.uid;
    }

    // == ChatMessages Collection ==
    match /chatMessages/{chatId} {
      // allow create: if isAuthenticated() && request.resource.data.patientAuthUid == request.auth.uid && request.resource.data.senderId == request.auth.uid;
      // allow read: if isAuthenticated() && resource.data.patientAuthUid == request.auth.uid; // Only patient can read their chats
    }

    // == PillReminders Collection ==
    match /pillReminders/{reminderId} {
      // allow read, write: if isAuthenticated() && request.auth.uid == resource.data.patientAuthUid;
    }
    */
  }
}
